{"version":3,"sources":["components/FeedBack/Statistics/Statistics.module.css","components/FeedBack/FeedbackOptions/FeedbackOptions.module.css","components/FeedBack/FeedBack.module.css","components/FeedBack/Notification/Notification.module.css","components/FeedBack/Statistics/Statistics.js","components/FeedBack/FeedbackOptions/FeedbackOptions.js","components/FeedBack/Section/Section.js","components/FeedBack/Notification/Notification.js","components/FeedBack/FeedBack.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","percentage","className","style","span__statistic","FeedbackOptions","onClick","wrapper__btn","btn","type","name","Section","title","flag","children","titleFlag","Notification","span__warning","FeedBack","state","countPositiveFeedbackPercentage","setState","percent","Math","ceil","countTotalFeedback","target","this","wrapper","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,gBAAkB,sC,gBCApCD,EAAOC,QAAU,CAAC,aAAe,sCAAsC,IAAM,+B,qBCA7ED,EAAOC,QAAU,CAAC,QAAU,4B,gBCA5BD,EAAOC,QAAU,CAAC,cAAgB,sC,8MCCnB,SAASC,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC9D,OACE,+BACE,+BACE,2CACA,sBAAMC,UAAWC,IAAMC,gBAAvB,SAAyCP,OAE3C,+BACE,8CACA,sBAAMK,UAAWC,IAAMC,gBAAvB,SAAyCN,OAE3C,+BACE,0CACA,sBAAMI,UAAWC,IAAMC,gBAAvB,SAAyCL,OAE3C,+BACE,4CACA,sBAAMG,UAAWC,IAAMC,gBAAvB,SAAyCJ,OAE3C,+BACE,yDACA,uBAAME,UAAWC,IAAMC,gBAAvB,UAAyCH,EAAzC,a,oBCrBO,SAASI,EAAT,GAAuC,IAAZC,EAAW,EAAXA,QACxC,OACE,sBAAKJ,UAAWC,IAAMI,aAAtB,UACE,wBAAQL,UAAWC,IAAMK,IAAKC,KAAK,SAASC,KAAK,OAAOJ,QAASA,EAAjE,kBAGA,wBACEJ,UAAWC,IAAMK,IACjBC,KAAK,SACLC,KAAK,UACLJ,QAASA,EAJX,qBAQA,wBAAQJ,UAAWC,IAAMK,IAAKC,KAAK,SAASC,KAAK,MAAMJ,QAASA,EAAhE,oB,MCfS,SAASK,EAAT,GAA6C,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACvCC,EAAYF,EAAO,6BAAKD,IAAc,6BAAKA,IACjD,OACE,qCACGG,EADH,IACeD,K,qBCJJ,SAASE,IACtB,OAAO,sBAAMd,UAAWC,IAAMc,cAAvB,kC,ICwDMC,E,4MAlDbC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,WAAY,G,EAEdmB,gCAAkC,WAChC,EAAKC,UAAS,YAA6B,IAA1BxB,EAAyB,EAAzBA,KACTG,EAAQH,EAD0B,EAAnBC,QAAmB,EAAVC,IAExBuB,EAAUC,KAAKC,KAAM,IAAMxB,EAASH,GAC1C,GAAIG,EAAQ,EACV,MAAO,CACLC,WAAYqB,EACZtB,MAAOA,O,EAKfyB,mBAAqB,YAAiB,IAC5Bf,EAD2B,EAAbgB,OACdhB,KACR,EAAKW,SAAL,eACGX,EAAO,EAAKS,MAAMT,GAAQ,IAE7B,EAAKU,mC,uDAEG,IAAD,EAC2CO,KAAKR,MAA/CtB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAAKC,EADrB,EACqBA,MAAOC,EAD5B,EAC4BA,WACnC,OACE,sBAAKC,UAAWC,IAAMyB,QAAtB,UACE,cAACjB,EAAD,CAASC,MAAM,wBAAwBC,MAAM,EAA7C,SACE,cAACR,EAAD,CAAiBC,QAASqB,KAAKF,uBAEjC,cAACd,EAAD,CAASC,MAAM,aAAaC,MAAM,EAAlC,SACGb,EAAQ,EACP,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,WAAYA,IAGd,cAACe,EAAD,a,GA5CWa,aCLR,SAASC,IACtB,OACE,mCACE,cAAC,EAAD,MCCNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.b6bb5e0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"span__statistic\":\"Statistics_span__statistic__2TCTo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper__btn\":\"FeedbackOptions_wrapper__btn__3Goo0\",\"btn\":\"FeedbackOptions_btn__3Rgxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedBack_wrapper__1G789\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span__warning\":\"Notification_span__warning__2k5V_\"};","import style from './Statistics.module.css';\nimport PropTypes from 'prop-types';\nexport default function Statistics({ good, neutral, bad, total, percentage }) {\n  return (\n    <ul>\n      <li>\n        <span>Good : </span>\n        <span className={style.span__statistic}>{good}</span>\n      </li>\n      <li>\n        <span>Neutral : </span>\n        <span className={style.span__statistic}>{neutral}</span>\n      </li>\n      <li>\n        <span>Bad : </span>\n        <span className={style.span__statistic}>{bad}</span>\n      </li>\n      <li>\n        <span>Total : </span>\n        <span className={style.span__statistic}>{total}</span>\n      </li>\n      <li>\n        <span>Positive statistic : </span>\n        <span className={style.span__statistic}>{percentage}%</span>\n      </li>\n    </ul>\n  );\n}\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n","import style from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\nexport default function FeedbackOptions({ onClick }) {\n  return (\n    <div className={style.wrapper__btn}>\n      <button className={style.btn} type=\"button\" name=\"good\" onClick={onClick}>\n        Good\n      </button>\n      <button\n        className={style.btn}\n        type=\"button\"\n        name=\"neutral\"\n        onClick={onClick}\n      >\n        Neutral\n      </button>\n      <button className={style.btn} type=\"button\" name=\"bad\" onClick={onClick}>\n        Bad\n      </button>\n    </div>\n  );\n}\nFeedbackOptions.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import style from './Section.module.css';\nexport default function Section({ title, flag, children }) {\n  const titleFlag = flag ? <h1>{title}</h1> : <h3>{title}</h3>;\n  return (\n    <>\n      {titleFlag} {children}\n    </>\n  );\n}\n","import style from './Notification.module.css';\nexport default function Notification() {\n  return <span className={style.span__warning}>Not feedbacks given </span>;\n}\n","import style from './FeedBack.module.css';\nimport React, { Component } from 'react';\nimport Statistics from './Statistics/Statistics.js';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions.js';\nimport Section from './Section/Section.js';\nimport Notification from './Notification/Notification.js';\n\nclass FeedBack extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    percentage: 0,\n  };\n  countPositiveFeedbackPercentage = () => {\n    this.setState(({ good, neutral, bad }) => {\n      const total = good + neutral + bad;\n      const percent = Math.ceil((100 / total) * good);\n      if (total > 0) {\n        return {\n          percentage: percent,\n          total: total,\n        };\n      }\n    });\n  };\n  countTotalFeedback = ({ target }) => {\n    const { name } = target;\n    this.setState({\n      [name]: this.state[name] + 1,\n    });\n    this.countPositiveFeedbackPercentage();\n  };\n  render() {\n    const { good, neutral, bad, total, percentage } = this.state;\n    return (\n      <div className={style.wrapper}>\n        <Section title=\"Please leave feedback\" flag={true}>\n          <FeedbackOptions onClick={this.countTotalFeedback} />\n        </Section>\n        <Section title=\"Statistics\" flag={false}>\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              percentage={percentage}\n            />\n          ) : (\n            <Notification />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\nexport default FeedBack;\n","import FeedBack from './components/FeedBack/FeedBack.js';\n\nexport default function App() {\n  return (\n    <>\n      <FeedBack />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}